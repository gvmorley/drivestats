#
# Use's LetsEncrypt:
# certbot certonly -n --standalone --agree-tos --preferred-challenges http -d drivestats.example.com -m letsencrypt@example.com --pre-hook "systemctl stop nginx" --post-hook "systemctl start nginx"
#
# Netdata portion based on this link:
# https://github.com/netdata/netdata/blob/master/doc/Running-behind-nginx.md
#
server {
    listen                        80;
    server_name                   drivestats.example.com;
    return 301                    https://$host$request_uri;
}

server {

    listen                         443 ssl http2 default_server;
    ssl                            on;
    server_name                    drivestats.example.com;
    ssl_certificate                /etc/letsencrypt/live/drivestats.example.com/fullchain.pem;
    ssl_certificate_key            /etc/letsencrypt/live/drivestats.example.com/privkey.pem;
    ssl_protocols                  TLSv1.2;
    ssl_ciphers                    ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers      on;

    location / {
        proxy_pass                 http://127.0.0.1:8000;
    }

    location = /netdata {
        return 301                 /netdata/;
    }

    location ~ /netdata/(?<ndpath>.*) {
        proxy_redirect             off;
        proxy_set_header           Host $host;

        proxy_set_header           X-Forwarded-Host $host;
        proxy_set_header           X-Forwarded-Server $host;
        proxy_set_header           X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header           Connection "keep-alive";
        proxy_http_version         1.1;
        proxy_pass_request_headers on;
        proxy_store                off;
        proxy_pass                 http://127.0.0.1:19999/$ndpath$is_args$args;

        gzip on;
        gzip_proxied any;
        gzip_types *;
    }

}